@inject SignInManager<ApplicationUser> SignInManager
@{
	var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-tabs" id="profileTab" role="tablist">
	<li class="nav-item" role="presentation">
		<a role="tab" aria-selected="true"
		   class="nav-link @ManageNavPages.IndexNavClass(ViewContext)"
		   id="profile"
		   asp-page="./Index">Profile</a>
	</li>
	<li class="nav-item" role="presentation">
		<a role="tab" aria-selected="false"
		   class="nav-link @ManageNavPages.EmailNavClass(ViewContext)"
		   id="email"
		   asp-page="./Email">Email</a>
	</li>
	<li class="nav-item" role="presentation">
		<a role="tab" aria-selected="false"
		   class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)"
		   id="change-password"
		   asp-page="./ChangePassword">Mật khẩu</a>
	</li>
	@if (hasExternalLogins)
	{
		<li id="external-logins" class="nav-item" role="presentation">
			<a role="tab" aria-selected="false"
			   class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)"
			   id="external-login"
			   asp-page="./ExternalLogins">External logins</a>
		</li>
	}
	@* <li class="nav-item" role="presentation">
		<a role="tab" aria-selected="false"
		   class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"
		   id="two-factor"
		   asp-page="./TwoFactorAuthentication">Two-factor authentication</a>
	</li> *@
	@* <li class="nav-item" role="presentation">
		<a role="tab" aria-selected="false"
		   class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)"
		   id="personal-data"
		   asp-page="./PersonalData">Personal data</a>
	</li> *@
</ul>