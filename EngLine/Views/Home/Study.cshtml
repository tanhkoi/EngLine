@model EngLine.ViewModels.CourseViewModel

<style>
	.course-content {
		max-height: 415px;
		min-height: 415px;
		overflow-y: auto;
	}

	.video-container {
		position: relative;
		padding-bottom: 56.25%; /* 16:9 */
		height: 0;
		overflow: hidden;
		max-width: 100%;
		background: #000;
	}

		.video-container video {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
		}

	.video-controls {
		display: flex;
		justify-content: space-between;
		align-items: center;
		background: #333;
		color: #fff;
		padding: 10px;
		position: absolute;
		bottom: 0;
		width: 100%;
		box-sizing: border-box;
	}

		.video-controls button,
		.video-controls input {
			background: none;
			border: none;
			color: #fff;
			cursor: pointer;
			margin: 0 5px;
		}

			.video-controls input[type=range] {
				width: 100px;
			}

	.badge-primary {
		background-color: #007bff;
	}

	.badge-secondary {
		background-color: #6c757d;
	}

	.mt-5 {
		margin-top: 3rem;
	}

	.current-lesson {
		background-color: #f0f0f0;
		font-weight: bold;
	}

		.current-lesson a {
			color: #6b2dae;
		}
</style>

<div style="background-color: #6b2dae; width: 100%; height: 93px;"></div>
<div class="container mt-5">
	<div class="row">
		<div class="col-md-8">
			<div class="video-container">
				<video id="lessonVideo">
					<source src="@Model.Lessons.ElementAt(0).Video" type="video/mp4">
					Your browser does not support the video tag.
				</video>
				<div class="video-controls">
					<button id="playPause"><i class="fa-solid fa-play"></i></button>
					<button id="rewind"><i class="fa-solid fa-backward"></i></button>
					<button id="fastForward"><i class="fa-solid fa-forward"></i></button>
					<button id="muteToggle"><i class="fa-solid fa-volume-high"></i></button>
					<button id="fullScreenToggle"><i class="fa-solid fa-expand"></i></button>
					<select id="playbackRate">
						<option value="0.5">0.5x</option>
						<option value="1" selected>1x</option>
						<option value="1.5">1.5x</option>
						<option value="2">2x</option>
					</select>
				</div>
			</div>
		</div>
		<div class="col-md-4">
			<div class="card course-content">
				<div class="card-header" style="background-color: #6b2dae!important; color: white!important;">
					Nội dung khóa học
				</div>
				<aside class="course-content">
					<ul class="list-group list-group-flush">
						@foreach (var lesson in Model.Lessons)
						{
							<li class="list-group-item lesson-item">
								<a href="#" data-video="@lesson.Video" data-lesson-id="@lesson.LessonId"><strong>@lesson.Name</strong></a>
								<span class="badge badge-secondary float-right"></span>
							</li>
						}
					</ul>
				</aside>
			</div>
		</div>
	</div>
	<div class="row mt-4 mb-4">
		<div class="col-md-8">
			<h2>@Model.CourseName</h2>
			<p class="text-muted">@Model.Description</p>
			<p><strong>Cập nhật lần cuối:</strong> Tháng 5 2024</p>
			<div class="d-flex align-items-center">
				<span class="badge badge-primary mr-2">4.5 <i class="fa fa-star"></i></span>
				<span class="mr-2">81,030 học sinh</span>
				<span>66.5 giờ</span>
			</div>
		</div>
		<div class="col-md-4">
			<div class="author_info">
				<div class="auhor_header">
					<div class="thumb">
						<img src="@ViewBag.Teacher.Photo" alt="" style="height: 50px!important;">
					</div>
					<div class="name">
						<h3>@ViewBag.Teacher.FirstName</h3>
						@* <p>UI/UX Designer</p> *@
					</div>
				</div>
				<p class="text_info">
					@ViewBag.Teacher.Description
				</p>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const links = document.querySelectorAll('.course-content a');
			const video = document.getElementById('lessonVideo');
			const playPauseButton = document.getElementById('playPause');
			const rewindButton = document.getElementById('rewind');
			const fastForwardButton = document.getElementById('fastForward');
			const muteToggleButton = document.getElementById('muteToggle');
			const fullScreenToggleButton = document.getElementById('fullScreenToggle');
			const playbackRateSelect = document.getElementById('playbackRate');

			let currentLesson = null;
			let watchedLessons = new Set();

			links.forEach(link => {
				link.addEventListener('click', function (event) {
					event.preventDefault();
					const videoSrc = this.getAttribute('data-video');
					video.querySelector('source').setAttribute('src', videoSrc);
					video.load();
					video.play();
					playPauseButton.innerHTML = '<i class="fa-solid fa-pause"></i>';

					if (currentLesson) {
						currentLesson.classList.remove('current-lesson');
					}
					this.parentElement.classList.add('current-lesson');
					currentLesson = this.parentElement;
				});
			});

			playPauseButton.addEventListener('click', function () {
				if (video.paused || video.ended) {
					video.play();
					playPauseButton.innerHTML = '<i class="fa-solid fa-pause"></i>';
				} else {
					video.pause();
					playPauseButton.innerHTML = '<i class="fa-solid fa-play"></i>';
				}
			});

			rewindButton.addEventListener('click', function () {
				video.currentTime -= 10;
			});

			fastForwardButton.addEventListener('click', function () {
				video.currentTime += 10;
			});

			muteToggleButton.addEventListener('click', function () {
				video.muted = !video.muted;
				muteToggleButton.innerHTML = video.muted ? '<i class="fa-solid fa-volume-xmark"></i>' : '<i class="fa-solid fa-volume-high"></i>';
			});

			fullScreenToggleButton.addEventListener('click', function () {
				if (video.requestFullscreen) {
					video.requestFullscreen();
				} else if (video.mozRequestFullScreen) { /* Firefox */
					video.mozRequestFullScreen();
				} else if (video.webkitRequestFullscreen) { /* Chrome, Safari and Opera */
					video.webkitRequestFullscreen();
				} else if (video.msRequestFullscreen) { /* IE/Edge */
					video.msRequestFullscreen();
				}
			});

			playbackRateSelect.addEventListener('change', function () {
				video.playbackRate = this.value;
			});

			video.addEventListener('ended', function () {
				if (currentLesson) {
					const lessonId = currentLesson.querySelector('a').getAttribute('data-lesson-id');
					watchedLessons.add(lessonId);

					const nextLesson = currentLesson.nextElementSibling;
					if (nextLesson) {
						const nextVideoSrc = nextLesson.querySelector('a').getAttribute('data-video');
						video.querySelector('source').setAttribute('src', nextVideoSrc);
						video.load();
						video.play();

						currentLesson.classList.remove('current-lesson');
						nextLesson.classList.add('current-lesson');
						currentLesson = nextLesson;
						playPauseButton.innerHTML = '<i class="fa-solid fa-pause"></i>';
					} else if (watchedLessons.size === links.length) {
						Swal.fire({
							title: "Success!",
							text: "Chúc mừng bạn đã hoàn thành khóa học",
							icon: "success",
							confirmButtonText: "OK"
						});
					}
				}
			});
		});

	</script>
}
